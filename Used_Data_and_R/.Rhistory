geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = dummy_spend_fall)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
mn_mod_output_OLS <- mn_mod %>%
predict(new_data=minnesota) %>%
bind_cols(minnesota)%>%
mutate(resid = gps_away_from_home - .pred)
mn_mod_output_OLS_dumy <- mn_mod_dummy %>%
predict(new_data=minnesota) %>%
bind_cols(minnesota)%>%
mutate(resid = gps_away_from_home - .pred)
ggplot(mn_mod_output_OLS, aes(y = resid, x = hospitalized_rate)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = case_rate)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq1)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq2)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq3)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq4)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = spend_remoteservices)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS_dumy, aes(y = resid, x = dummy_spend_fall)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
mn_mod_output_OLS <- mn_mod %>%
predict(new_data=minnesota) %>%
bind_cols(minnesota)%>%
mutate(resid = gps_away_from_home - .pred)
mn_mod_output_OLS_dumy <- mn_mod_dummy %>%
predict(new_data=minnesota) %>%
bind_cols(minnesota)%>%
mutate(resid = gps_away_from_home - .pred)
ggplot(mn_mod_output_OLS, aes(y = resid, x = hospitalized_rate)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = case_rate)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq1)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq2)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq3)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq4)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = spend_remoteservices)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS_dumy, aes(y = resid, x = dummy_spend_fall)) +
geom_boxplot() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
mn_mod_output_OLS <- mn_mod %>%
predict(new_data=minnesota) %>%
bind_cols(minnesota)%>%
mutate(resid = gps_away_from_home - .pred)
mn_mod_output_OLS_dumy <- mn_mod_dummy %>%
predict(new_data=minnesota) %>%
bind_cols(minnesota)%>%
mutate(resid = gps_away_from_home - .pred)
ggplot(mn_mod_output_OLS, aes(y = resid, x = hospitalized_rate)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = case_rate)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq1)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq2)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq3)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq4)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = spend_remoteservices)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS_dumy, aes(y = resid, x = dummy_spend_fall)) +
geom_boxplot() +
geom_smooth(color = "blue", se = FALSE) +
theme_classic()
knitr::opts_chunk$set(echo = TRUE)
# library statements
# read in data
library(ISLR)
library(dplyr)
library(readr)
library(broom)
library(ggplot2)
library(splines)
library(tidymodels)
tidymodels_prefer()
COVID_State <- read.csv("COVID - State - Daily.csv", na.strings = ".")
Employment_State <- read.csv("Employment - State - Daily.csv", na.strings = ".")
Mobility_State <- read.csv("Google Mobility - State - Daily.csv", na.strings = ".")
Spending_State <- read.csv("Affinity - State - Daily.csv", na.strings = ".")
# data cleaning
COVID_State$Date<-as.Date(with(COVID_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Employment_State$Date<-as.Date(with(Employment_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Mobility_State$Date<-as.Date(with(Mobility_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Spending_State$Date<-as.Date(with(Spending_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
full_data <- merge(merge(merge(COVID_State, Employment_State, by=c("Date","statefips")), Mobility_State, by=c("Date","statefips")), Spending_State, by=c("Date","statefips"))
head(full_data)
full_data1 <- full_data %>%
select(-year.x, -month.x, -day.x, - year.y, -month.y, -day.y, -year.x )
# Creating a Dummy Variable that is yes from entry 22 to 50, the period of dramatic change.
full_data1 <- mutate(full_data1, dummy_spend_fall = if_else(Date >= "2020-03-16" & Date <= "2020-04-16", 1, 0))
minnesota <- full_data1 %>%
filter(statefips==27)
ggplot(minnesota, aes(y = gps_away_from_home, x = Date)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(minnesota, aes(y = dummy_spend_fall, x = Date)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
#OLS
set.seed(123)
folded_mn <- vfold_cv(minnesota, v = 6)
lm_spec <-
linear_reg() %>%
set_engine(engine = 'lm') %>%
set_mode('regression')
full_rec <- recipe(gps_away_from_home ~ case_rate + hospitalized_rate + emp_incq1 + emp_incq2 + emp_incq3 + emp_incq4 + spend_remoteservices, data=minnesota) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors())%>%
step_nzv(all_predictors())
full_rec_dummy <- recipe(gps_away_from_home ~ case_rate + hospitalized_rate + emp_incq1 + emp_incq2 + emp_incq3 + emp_incq4 + spend_remoteservices + dummy_spend_fall, data=minnesota) %>%
step_normalize(all_numeric_predictors()) %>%
step_dummy(all_nominal_predictors())%>%
step_nzv(all_predictors())
mn_model_wf <- workflow() %>%
add_recipe(full_rec) %>%
add_model(lm_spec)
mn_model_dumy_wf <- workflow() %>%
add_recipe(full_rec_dummy) %>%
add_model(lm_spec)
#CV is to see how well the model is doing
mnFullMod_cv <- fit_resamples(mn_model_wf,
resamples = folded_mn,
control = control_resamples(save_pred = TRUE),
metrics = metric_set(rmse, rsq, mae))
mnFullMod_cv %>% collect_metrics(summarize=TRUE)
mn_mod <- mn_model_wf %>% fit(data=minnesota)
#with Dummy fo dramatic drop in spending
mnFullMod_cv_dumy <- fit_resamples(mn_model_dumy_wf,
resamples = folded_mn,
control = control_resamples(save_pred = TRUE),
metrics = metric_set(rmse, rsq, mae))
mnFullMod_cv_dumy %>% collect_metrics(summarize=TRUE)
mn_mod_dummy <- mn_model_dumy_wf %>% fit(data=minnesota)
tidy(mn_mod_dummy)
tidy(mn_mod)
mn_mod_output_OLS <- mn_mod %>%
predict(new_data=minnesota) %>%
bind_cols(minnesota)%>%
mutate(resid = gps_away_from_home - .pred)
mn_mod_output_OLS_dumy <- mn_mod_dummy %>%
predict(new_data=minnesota) %>%
bind_cols(minnesota)%>%
mutate(resid = gps_away_from_home - .pred)
ggplot(mn_mod_output_OLS, aes(y = resid, x = hospitalized_rate)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = case_rate)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq1)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq2)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq3)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = emp_incq4)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS, aes(y = resid, x = spend_remoteservices)) +
geom_point() +
geom_smooth(color = "blue", se = FALSE) +
geom_hline(yintercept = 0, color = "red") +
theme_classic()
ggplot(mn_mod_output_OLS_dumy, aes(y = resid, x = dummy_spend_fall)) +
geom_boxplot() +
geom_smooth(color = "blue", se = FALSE) +
theme_classic()
knitr::opts_chunk$set(echo = TRUE)
# library statements
# read in data
library(ISLR)
library(dplyr)
library(readr)
library(broom)
library(ggplot2)
library(splines)
library(tidymodels)
tidymodels_prefer()
COVID_State <- read.csv("COVID - State - Daily.csv", na.strings = ".")
Employment_State <- read.csv("Employment - State - Daily.csv", na.strings = ".")
Mobility_State <- read.csv("Google Mobility - State - Daily.csv", na.strings = ".")
Spending_State <- read.csv("Affinity - State - Daily.csv", na.strings = ".")
# data cleaning
COVID_State$Date<-as.Date(with(COVID_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Employment_State$Date<-as.Date(with(Employment_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Mobility_State$Date<-as.Date(with(Mobility_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Spending_State$Date<-as.Date(with(Spending_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
full_data <- merge(merge(merge(COVID_State, Employment_State, by=c("Date","statefips")), Mobility_State, by=c("Date","statefips")), Spending_State, by=c("Date","statefips"))
head(full_data)
full_data1 <- full_data %>%
select(-year.x, -month.x, -day.x, - year.y, -month.y, -day.y, -year.x )
# Creating a Dummy Variable that is yes from entry 22 to 50, the period of dramatic change.
full_data1 <- mutate(full_data1, dummy_spend_fall = if_else(Date >= "2020-03-16" & Date <= "2020-04-16", 1, 0))
minnesota <- full_data1 %>%
filter(statefips==27)
View(minnesota)
View(COVID_State)
View(COVID_State)
View(Employment_State)
View(Mobility_State)
install.packages("maps")
# library statements
# read in data
library(ISLR)
library(dplyr)
library(readr)
library(broom)
library(ggplot2)
library(splines)
library(tidymodels)
tidymodels_prefer()
COVID_State <- read.csv("COVID - State - Daily.csv", na.strings = ".")
Employment_State <- read.csv("Employment - State - Daily.csv", na.strings = ".")
Mobility_State <- read.csv("Google Mobility - State - Daily.csv", na.strings = ".")
Spending_State <- read.csv("Affinity - State - Daily.csv", na.strings = ".")
data(state.fips)
# library statements
# read in data
library(ISLR)
library(dplyr)
library(readr)
library(broom)
library(ggplot2)
library(splines)
library(tidymodels)
tidymodels_prefer()
COVID_State <- read.csv("COVID - State - Daily.csv", na.strings = ".")
Employment_State <- read.csv("Employment - State - Daily.csv", na.strings = ".")
Mobility_State <- read.csv("Google Mobility - State - Daily.csv", na.strings = ".")
Spending_State <- read.csv("Affinity - State - Daily.csv", na.strings = ".")
data(state.fips)
# library statements
# read in data
library(ISLR)
library(dplyr)
library(readr)
library(broom)
library(ggplot2)
library(splines)
library(tidymodels)
library(maps)
tidymodels_prefer()
COVID_State <- read.csv("COVID - State - Daily.csv", na.strings = ".")
Employment_State <- read.csv("Employment - State - Daily.csv", na.strings = ".")
Mobility_State <- read.csv("Google Mobility - State - Daily.csv", na.strings = ".")
Spending_State <- read.csv("Affinity - State - Daily.csv", na.strings = ".")
data(state.fips)
# library statements
# read in data
library(ISLR)
library(dplyr)
library(readr)
library(broom)
library(ggplot2)
library(splines)
library(tidymodels)
library(maps)
tidymodels_prefer()
COVID_State <- read.csv("COVID - State - Daily.csv", na.strings = ".")
Employment_State <- read.csv("Employment - State - Daily.csv", na.strings = ".")
View(state.fips)
Mobility_State <- read.csv("Google Mobility - State - Daily.csv", na.strings = ".")
Spending_State <- read.csv("Affinity - State - Daily.csv", na.strings = ".")
data(state.fips)
view(state.fips)
knitr::opts_chunk$set(echo = TRUE)
# library statements
# read in data
library(ISLR)
library(dplyr)
library(readr)
library(broom)
library(ggplot2)
library(splines)
library(tidymodels)
library(gridExtra)
library(maps)
tidymodels_prefer()
COVID_State <- read.csv("COVID - State - Daily.csv", na.strings = ".")
Employment_State <- read.csv("Employment - State - Daily.csv", na.strings = ".")
Mobility_State <- read.csv("Google Mobility - State - Daily.csv", na.strings = ".")
Spending_State <- read.csv("Affinity - State - Daily.csv", na.strings = ".")
regions <- read.csv("regions.csv")
fips <- state.fips
# library statements
# read in data
library(ISLR)
library(dplyr)
library(readr)
library(broom)
library(ggplot2)
library(splines)
library(tidymodels)
library(gridExtra)
library(maps)
tidymodels_prefer()
COVID_State <- read.csv("COVID - State - Daily.csv", na.strings = ".")
Employment_State <- read.csv("Employment - State - Daily.csv", na.strings = ".")
Mobility_State <- read.csv("Google Mobility - State - Daily.csv", na.strings = ".")
Spending_State <- read.csv("Affinity - State - Daily.csv", na.strings = ".")
regions <- read.csv("regions.csv")
fips <- state.fips
# data cleaning
COVID_State$Date<-as.Date(with(COVID_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Employment_State$Date<-as.Date(with(Employment_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Mobility_State$Date<-as.Date(with(Mobility_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Spending_State$Date<-as.Date(with(Spending_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
full_data <- merge(merge(merge(COVID_State, Employment_State, by=c("Date","statefips")), Mobility_State, by=c("Date","statefips")), Spending_State, by=c("Date","statefips"))
head(full_data)
full_data1 <- full_data %>%
select(-year.x, -month.x, -day.x, - year.y, -month.y, -day.y, -year.x )
regions <- regions%>%
inner_join(fips, by=c("State.Code"="abb"))%>%
select(fips.x, State.Code, Region, Division)
View(regions)
# library statements
# read in data
library(ISLR)
library(dplyr)
library(readr)
library(broom)
library(ggplot2)
library(splines)
library(tidymodels)
library(gridExtra)
library(maps)
tidymodels_prefer()
COVID_State <- read.csv("COVID - State - Daily.csv", na.strings = ".")
Employment_State <- read.csv("Employment - State - Daily.csv", na.strings = ".")
Mobility_State <- read.csv("Google Mobility - State - Daily.csv", na.strings = ".")
Spending_State <- read.csv("Affinity - State - Daily.csv", na.strings = ".")
regions <- read.csv("regions.csv")
fips <- state.fips
View(fips)
# data cleaning
COVID_State$Date<-as.Date(with(COVID_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Employment_State$Date<-as.Date(with(Employment_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Mobility_State$Date<-as.Date(with(Mobility_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Spending_State$Date<-as.Date(with(Spending_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
full_data <- merge(merge(merge(COVID_State, Employment_State, by=c("Date","statefips")), Mobility_State, by=c("Date","statefips")), Spending_State, by=c("Date","statefips"))
head(full_data)
full_data1 <- full_data %>%
select(-year.x, -month.x, -day.x, - year.y, -month.y, -day.y, -year.x )
regions <- regions%>%
inner_join(fips, by=c("State.Code"="abb"))%>%
select(fips, State.Code, Region, Division)
#created dataset with the fips code
full_cut <- full_data1 %>%
filter(Date > "2020-04-13")%>%
select(statefips, Date, gps_away_from_home, case_rate, hospitalized_rate, spend_remoteservices, spend_hcs, emp_incbelowmed)%>%
left_join(regions, by=c("statefips"="fips.x"))
# data cleaning
COVID_State$Date<-as.Date(with(COVID_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Employment_State$Date<-as.Date(with(Employment_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Mobility_State$Date<-as.Date(with(Mobility_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Spending_State$Date<-as.Date(with(Spending_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
full_data <- merge(merge(merge(COVID_State, Employment_State, by=c("Date","statefips")), Mobility_State, by=c("Date","statefips")), Spending_State, by=c("Date","statefips"))
head(full_data)
full_data1 <- full_data %>%
select(-year.x, -month.x, -day.x, - year.y, -month.y, -day.y, -year.x )
regions <- regions%>%
inner_join(fips, by=c("State.Code"="abb"))%>%
select(fips, State.Code, Region, Division)
# data cleaning
COVID_State$Date<-as.Date(with(COVID_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Employment_State$Date<-as.Date(with(Employment_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Mobility_State$Date<-as.Date(with(Mobility_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Spending_State$Date<-as.Date(with(Spending_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
full_data <- merge(merge(merge(COVID_State, Employment_State, by=c("Date","statefips")), Mobility_State, by=c("Date","statefips")), Spending_State, by=c("Date","statefips"))
head(full_data)
full_data1 <- full_data %>%
select(-year.x, -month.x, -day.x, - year.y, -month.y, -day.y, -year.x )
regions <- regions%>%
inner_join(fips, by=c("State.Code"="abb"))%>%
select(fips.x, State.Code, Region, Division)
#created dataset with the fips code
full_cut <- full_data1 %>%
filter(Date > "2020-04-13")%>%
select(statefips, Date, gps_away_from_home, case_rate, hospitalized_rate, spend_remoteservices, spend_hcs, emp_incbelowmed)%>%
left_join(regions, by=c("statefips"="fips.x"))
View(regions)
View(regions)
View(full_cut)
# data cleaning
COVID_State$Date<-as.Date(with(COVID_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Employment_State$Date<-as.Date(with(Employment_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Mobility_State$Date<-as.Date(with(Mobility_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
Spending_State$Date<-as.Date(with(Spending_State,paste(year,month,day,sep="-")),"%Y-%m-%d")
full_data <- merge(merge(merge(COVID_State, Employment_State, by=c("Date","statefips")), Mobility_State, by=c("Date","statefips")), Spending_State, by=c("Date","statefips"))
head(full_data)
full_data1 <- full_data %>%
select(-year.x, -month.x, -day.x, - year.y, -month.y, -day.y, -year.x )
regions <- regions%>%
inner_join(fips, by=c("State.Code"="abb"))%>%
select(fips.x, State.Code, Region, Division)
#created dataset with the fips code
full_cut <- full_data1 %>%
filter(Date > "2020-04-13")%>%
select(statefips, Date, gps_away_from_home, case_rate, hospitalized_rate, spend_remoteservices, spend_hcs, emp_incbelowmed)%>%
left_join(regions, by=c("statefips"="fips.x"))
View(full_data)
View(full_data1)
View(full_data1)
View(Spending_State)
View(full_data1)
View(regions)
